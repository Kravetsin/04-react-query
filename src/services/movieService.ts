//! üîπ Imports
import axios from "axios";
import type { Movie } from "../types/movie";
import { useQuery } from "@tanstack/react-query";

//! üîπ SecretKey
const myKey = import.meta.env.VITE_API_KEY;

//! üîπ Interface
interface MovieHttpProps {
  results: Movie[];
}

//! üîπ Default Axios URL
axios.defaults.baseURL = "https://api.themoviedb.org/3/";

//! üîπ fetchMovies
const fetchMovies = async (query: string): Promise<Movie[]> => {
  const options = {
    params: { query: `${query}`, include_adult: false },
    method: "GET",
    headers: {
      accept: "application/json",
      Authorization: `Bearer ${myKey}`,
    },
  };

  try {
    const response = await axios.get<MovieHttpProps>("search/movie", options);
    return response.data.results;
  } catch (error) {
    console.error("Error fetching movies");
    throw error;
  }
};

export const useMovies = (query: string) => {
  return useQuery({
    queryKey: ["movies", query], // —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á (–≤–∞–∂–Ω–æ –¥–ª—è –∫–µ—à–∞)
    queryFn: () => fetchMovies(query), // queryFn –≤—Å–µ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    enabled: !!query, // –∑–∞–ø—É—Å–∫–∞—Ç—å –∑–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å query
  });
};
